<Window x:Class="PainelPress.WUpload"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" WindowStyle="None"
        xmlns:local="clr-namespace:PainelPress" 
        xmlns:shell1="http://schemas.microsoft.com/netfx/2009/xaml/presentation" xmlns:elementos="clr-namespace:PainelPress.Elementos"
        mc:Ignorable="d" Icon="/favicon.ico" AllowsTransparency="True"
        Title="Upload de imagem" Height="800" Width="1300">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF616161"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>

                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="border" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="4">
                                    <Ellipse x:Name="optionMark" Fill="Gray" MinHeight="10" MinWidth="10" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <shell1:WindowChrome.WindowChrome>
        <shell1:WindowChrome
            ResizeBorderThickness="6"
            CaptionHeight="50"
            CornerRadius="7"
            GlassFrameThickness="0">
        </shell1:WindowChrome>
    </shell1:WindowChrome.WindowChrome>
    <Grid Background="WhiteSmoke">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="55"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.Background>
                <LinearGradientBrush EndPoint="1,0" StartPoint="0,1">
                    <GradientStop Color="#FF4554A7" Offset="0.992"/>
                    <GradientStop Color="#FF08A4F5" Offset="0"/>
                    <GradientStop Color="#FF18A9F5" Offset="0.452"/>
                    <GradientStop Color="#FF328ECE" Offset="0.824"/>
                    <GradientStop Color="#FF4554A7" Offset="0.632"/>
                    <GradientStop Color="#FF4554A7" Offset="0.23"/>
                </LinearGradientBrush>
            </Grid.Background>
            <TextBlock Foreground="White" VerticalAlignment="Top" Margin="16,13,0,0" FontSize="22" HorizontalAlignment="Left" FontFamily="Cooper Std Black">Upload de imagem</TextBlock>
            <TextBlock MaxWidth="500" TextWrapping="Wrap" FontSize="18" Margin="10,0" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="status" Foreground="White"/>
            <Button WindowChrome.IsHitTestVisibleInChrome="True" HorizontalAlignment="Right" Name="btCloseWin" Click="btCloseWin_Click" VerticalAlignment="Center" Margin="10,0" Background="Transparent">
                <fa:ImageAwesome Icon="Close" Foreground="Red" Width="20"/>
            </Button>
        </Grid>

        <Grid Grid.Row="1" Visibility="Visible" Background="#FFA3B1B1" x:Name="imagemFull" Width="1200" Height="670" AllowDrop="True" Drop="imagemFull_Drop" DragEnter="imagemFull_DragEnter">
            <TextBlock FontSize="30" FontFamily="Cooper Std Black" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White">Arraste imagem e solte aqui</TextBlock>
        </Grid>
        <Grid x:Name="imagemContainer" Visibility="Collapsed" Width="1200" Height="670" Grid.Row="1" Background="#FF9AB2C7">
            <Grid.RowDefinitions>
                <RowDefinition Height="400"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid x:Name="imagemFundo" Grid.RowSpan="2" AllowDrop="True" Drop="imagemContainer_Drop">
                <Grid.Background>
                    <ImageBrush ImageSource="/Imagem/noimagem.png"/>
                </Grid.Background>
            </Grid>
            <Border Grid.Row="0" MouseDown="imgPerfil_MouseDown" Mouse.MouseWheel="imgPerfil_MouseWheel" PreviewMouseLeftButtonDown="imgPerfil_PreviewMouseLeftButtonDown" Drop="Perfil_Drop" DragEnter="Perfil_DragEnter" AllowDrop="True" x:Name="imgPerfil" HorizontalAlignment="Center" VerticalAlignment="Top" CornerRadius="200" Margin="0,20,0,0" BorderBrush="#84CD53" BorderThickness="5" Height="350" Width="350">
                <Border.Background>
                    <ImageBrush Stretch="Fill" ImageSource="/Imagem/noimagem.png"/>
                </Border.Background>
            </Border>
       
        </Grid>
       
        
        <ProgressBar IsIndeterminate="True" VerticalAlignment="Bottom"  Foreground="#FF7C2ED8" Height="5" Background="Transparent" BorderThickness="0" x:Name="pLoading" Visibility="Collapsed"/>

        <Grid Grid.Row="2">
            <Grid.Background>
                <LinearGradientBrush EndPoint="1,0" StartPoint="0,1">
                    <GradientStop Color="#FF4554A7" Offset="0.992"/>
                    <GradientStop Color="#FF08A4F5" Offset="0"/>
                    <GradientStop Color="#FF18A9F5" Offset="0.452"/>
                    <GradientStop Color="#FF328ECE" Offset="0.824"/>
                    <GradientStop Color="#FF4554A7" Offset="0.632"/>
                    <GradientStop Color="#FF4554A7" Offset="0.23"/>
                </LinearGradientBrush>
            </Grid.Background>
         
            <Grid Width="300" Height="55" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0">
                <TextBox Width="300" BorderBrush="#FFBDBDBD" BorderThickness="0" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"  Style="{DynamicResource TextBoxStyle1}" x:Name="editNome" FontSize="25" Padding="4,14,0,0"/>
                <TextBlock Margin="5,5" Padding="5,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="Gray">Nome</TextBlock>
 
            </Grid>
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center" Margin="8">
                <RadioButton Height="25" Tag="normal" Foreground="White" Content="Normal" Padding="3" Margin="7,0" IsChecked="True" Checked="radCheker_Checked"/>
                <RadioButton Height="25" Tag="com-imagem" Foreground="White" Content="Duas imagens"  Padding="3" Margin="7,0" Checked="radCheker_Checked"/>
                <RadioButton Height="25" Tag="full-imagem" Visibility="Collapsed" Content="Imagem Full"  Padding="3" Margin="7,0" Checked="radCheker_Checked"/>
            </StackPanel>
            <Button Margin="10,0" Width="250" HorizontalAlignment="Right" x:Name="btUpload" Content="Enviar" VerticalAlignment="Center" Background="#FF5CD130" BorderThickness="0" FontSize="30" Padding="0,0,0,5" Foreground="White" Click="btUpload_Click" BorderBrush="White"/>
        </Grid>
        <Grid x:Name="gridUrl" Visibility="Collapsed" Grid.Row="1" Grid.RowSpan="2" Background="#7F000000">
            <Border VerticalAlignment="Bottom" Padding="10" Background="#FF376EBF">
                <elementos:EditText x:Name="editUrl" Margin="0,0,30,0" MinHeight="50" QuebraLinha="True" Legenda="Url"/>
            </Border>
            <Button Margin="7,38" Padding="0" Background="Transparent" VerticalAlignment="Bottom" HorizontalAlignment="Right" x:Name="btCopyUrl" Click="btCopyUrl_Click">
                <fa:ImageAwesome Icon="Copy" Foreground="White" Width="25"/>
            </Button>
            <Button Margin="7" Padding="0" Background="Transparent" VerticalAlignment="Bottom" HorizontalAlignment="Right" x:Name="btCloseUrl" Click="btCloseUrl_Click">
                <fa:ImageAwesome Icon="WindowClose" Foreground="White" Width="25"/>
            </Button>
        </Grid>
        <Image Grid.Row="1" Source="Imagem/icon_check.png" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,5,0,10" x:Name="imgUpOk" Visibility="Hidden" MouseLeftButtonDown="imgUpOk_MouseLeftButtonDown" Cursor="Hand"/>
        <Image Grid.Row="1" Source="/Imagem/icon_error.png" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,5,0,10" x:Name="imgUpErro" Visibility="Hidden"/>
    </Grid>
</Window>
