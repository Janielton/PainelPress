<Window x:Class="PainelPress.WSocial"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PainelPress" xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d" Icon="favicon.ico"
        Title="Social / Notificações" Height="500" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF616161"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>

                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="border" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="4">
                                    <Ellipse x:Name="optionMark" Fill="Gray" MinHeight="10" MinWidth="10" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border1" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border1" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border1" Color="#FF569DE5"/>
       
       
       
    </Window.Resources>
    <Grid>
        <StackPanel Drop="Grid_Drop" AllowDrop="true" Background="Transparent">
            <Image Source="Imagem/noimagem.png" VerticalAlignment="Top" HorizontalAlignment="Center" Height="200" Margin="0,5,0,0" x:Name="imgUp"/>
        </StackPanel>

        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,10,0,0">
            <RadioButton IsChecked="True" Style="{DynamicResource RadioButtonStyle1}" Content="Twitter" FontSize="18" Margin="8,0" x:Name="radTwitter"/>
            <RadioButton Style="{DynamicResource RadioButtonStyle1}" Content="Facebook" FontSize="18" Margin="5,0" x:Name="radFacebook" Cursor="Hand"/>
        </StackPanel>
        <Image Source="Imagem/icon_check.png" VerticalAlignment="Bottom" HorizontalAlignment="Center" Height="50" Margin="0,5,0,80" x:Name="imgUpOk" Visibility="Hidden"/>
        <Image Source="/Imagem/icon_error.png" VerticalAlignment="Bottom" HorizontalAlignment="Center" Height="50" Margin="0,5,0,80" x:Name="imgUpErro" Visibility="Hidden"/>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,80,0,0">
            <TextBox Style="{DynamicResource TextBoxStyle1}" x:Name="editUrlImage" Width="400" Padding="5" Background="WhiteSmoke" BorderBrush="#FF7C2ED8" GotFocus="editUrlImage_GotFocus"/>
            <Button Width="30" Background="#FF7C2ED8" BorderThickness="0" x:Name="btSelectImg" Click="btSelectImg_Click" Content="..." Foreground="White" FontSize="20" VerticalAlignment="Center" Style="{DynamicResource ButtonStyle1}" Cursor="Hand" />
        </StackPanel>
   <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,150,0,0" Visibility="Hidden">
            <Button Content="#concurso" Name="btTag" Click="btTag_Click" Margin="3"/>
            <Button Content="#vaga" Click="btTag_Click" Margin="3" />
            <Button Content="#emprego" Click="btTag_Click" Margin="3"/>
            <Button Content="#concurso público" Click="btTag_Click" Margin="3"/>
            <Button Content="#simulado" Click="btTag_Click" Margin="3"/>
        </StackPanel>
        <TextBox VerticalAlignment="Bottom" HorizontalAlignment="Center"  Margin="0,60" FontSize="16" Padding="5" MinWidth="500"  x:Name="editMensagem" MaxWidth="600" TextWrapping="Wrap" MinHeight="80" />
        <Button Style="{DynamicResource ButtonStyle1}" x:Name="btEnviar" Content="Enviar" VerticalAlignment="Bottom" Background="#FF5CD130" BorderThickness="0" FontSize="30" Padding="0,0,0,5" Foreground="White" Click="btAcao_Click" BorderBrush="White"/>
        <ProgressBar IsIndeterminate="True" VerticalAlignment="Bottom"  Foreground="#FF7C2ED8" Height="5" Background="Transparent" BorderThickness="0" x:Name="pLoading" Visibility="Collapsed"/>
        <Button VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="Hand" Padding="0" Background="Transparent" x:Name="btConfig" Click="btConfig_Click">
            <Image Source="Imagem/config.png" Width="35" Height="35"/>
        </Button>
        <Grid HorizontalAlignment="Left" Visibility="Collapsed" x:Name="gridConfig">
            <Border Background="WhiteSmoke" BorderBrush="Gray" BorderThickness="0,0,3,0" Margin="0,0,25,0" Padding="8,5">
                <StackPanel Orientation="Vertical"  HorizontalAlignment="Left">
                    <TextBlock FontSize="18">Facebook</TextBlock>
                    <TextBlock FontSize="12">Token</TextBlock>
                    <TextBox TextWrapping="Wrap" x:Name="ediToken" MaxWidth="300"/>
                    <TextBlock FontSize="12">Página</TextBlock>
                    <TextBox x:Name="ediPageFace"/>
                    <CheckBox Visibility="Collapsed"  x:Name="hidenBrowser" Content="Esconder Navegador" IsChecked="True" Margin="0,5"/>
                    <Label Margin="0,15" Height="2" Foreground="Black" Background="Black"/>
                    <TextBlock FontSize="18">Twitter</TextBlock>
                    <StackPanel Orientation="Horizontal" Visibility="Collapsed" Margin="0,5" x:Name="stackLogado">
                        <TextBlock x:Name="nomeTwitter">User</TextBlock>
                        <Button x:Name="btSairTwitter" Click="btSairTwitter_Click" Margin="10,0" Content="Sair" Padding="10,0" FontSize="12"/>
                    </StackPanel>
                    <TextBox Visibility="Collapsed" x:Name="ediUserTwi"/>
                    <PasswordBox x:Name="ediSenhaTwi" Margin="0,7" Visibility="Collapsed"/>
                    <Button x:Name="btLogin" Click="btLogin_Click" Content="Login" Padding="0,0,0,4" Margin="20,10" Cursor="Hand"/>
                    <Label Margin="0,15" Height="2" Foreground="Black" Background="Black"/>
                    <Button x:Name="btSalvarConfig" Content="Salvar" Click="btSalvarConfig_Click" />
                </StackPanel>
            </Border>
            <Button x:Name="btCloseConfig" Click="btConfig_Click" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="Hand" Width="20" Height="20" Padding="0" Background="Transparent" Margin="0,5">
                <fa:ImageAwesome Icon="Close" Foreground="Red" Width="20" Height="20"/>
            </Button>
        </Grid>
        <TextBlock Margin="5" VerticalAlignment="Top" HorizontalAlignment="Right" x:Name="log"></TextBlock>
      
    </Grid>
</Window>